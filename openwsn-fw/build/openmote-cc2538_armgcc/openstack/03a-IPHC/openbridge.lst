   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"openbridge.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44 002d 000000   		.align	2
  47              	linklocalprefix:
  48 0030 FE       		.byte	-2
  49 0031 80       		.byte	-128
  50 0032 00       		.byte	0
  51 0033 00       		.byte	0
  52 0034 00       		.byte	0
  53 0035 00       		.byte	0
  54 0036 00       		.byte	0
  55 0037 00       		.byte	0
  56              		.text
  57              		.align	2
  58              		.global	openbridge_init
  59              		.thumb
  60              		.thumb_func
  62              	openbridge_init:
  63              	.LFB0:
  64              		.file 1 "build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c"
   1:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "opendefs.h"
   2:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "openbridge.h"
   3:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "openserial.h"
   4:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "packetfunctions.h"
   5:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "iphc.h"
   6:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "idmanager.h"
   7:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "openqueue.h"
   8:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
   9:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** //=========================== variables =======================================
  10:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  11:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** //=========================== prototypes ======================================
  12:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** //=========================== public ==========================================
  13:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  14:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_init(void) {
  65              		.loc 1 14 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0000 80B4     		push	{r7}
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0002 00AF     		add	r7, sp, #0
  74              		.cfi_def_cfa_register 7
  15:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
  75              		.loc 1 15 0
  76 0004 BD46     		mov	sp, r7
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0006 5DF8047B 		ldr	r7, [sp], #4
  80              		.cfi_restore 7
  81              		.cfi_def_cfa_offset 0
  82 000a 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE0:
  86              		.align	2
  87              		.global	openbridge_triggerData
  88              		.thumb
  89              		.thumb_func
  91              	openbridge_triggerData:
  92              	.LFB1:
  16:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  17:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_triggerData(void) {
  93              		.loc 1 17 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 144
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97 000c 90B5     		push	{r4, r7, lr}
  98              		.cfi_def_cfa_offset 12
  99              		.cfi_offset 4, -12
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 000e A5B0     		sub	sp, sp, #148
 103              		.cfi_def_cfa_offset 160
 104 0010 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
  18:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    uint8_t           input_buffer[136];//worst case: 8B of next hop + 128B of data
  19:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    OpenQueueEntry_t* pkt;
  20:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    uint8_t           numDataBytes;
  21:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  22:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    numDataBytes = openserial_getInputBufferFilllevel();
 106              		.loc 1 22 0
 107 0012 FFF7FEFF 		bl	openserial_getInputBufferFilllevel
 108 0016 0346     		mov	r3, r0
 109 0018 87F88F30 		strb	r3, [r7, #143]
  23:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  24:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //poipoi xv
  25:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //this is a temporal workaround as we are never supposed to get chunks of data
  26:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //longer than input buffer size.. I assume that HDLC will solve that.
  27:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // MAC header is 13B + 8 next hop so we cannot accept packets that are longer than 118B
  28:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    if (numDataBytes>(136 - 10/*21*/) || numDataBytes<8){
 110              		.loc 1 28 0
 111 001c 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 112 0020 7E2B     		cmp	r3, #126
 113 0022 03D8     		bhi	.L3
 114              		.loc 1 28 0 is_stmt 0 discriminator 1
 115 0024 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 116 0028 072B     		cmp	r3, #7
 117 002a 09D8     		bhi	.L4
 118              	.L3:
  29:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //to prevent too short or too long serial frames to kill the stack  
  30:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****        openserial_printError(COMPONENT_OPENBRIDGE,ERR_INPUTBUFFER_LENGTH,
 119              		.loc 1 30 0 is_stmt 1
 120 002c 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 121 0030 9BB2     		uxth	r3, r3
 122 0032 1020     		movs	r0, #16
 123 0034 3421     		movs	r1, #52
 124 0036 1A46     		mov	r2, r3
 125 0038 0023     		movs	r3, #0
 126 003a FFF7FEFF 		bl	openserial_printError
  31:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                    (errorparameter_t)numDataBytes,
  32:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                    (errorparameter_t)0);
  33:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****        return;
 127              		.loc 1 33 0
 128 003e 62E0     		b	.L2
 129              	.L4:
  34:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    }
  35:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  36:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //copying the buffer once we know it is not too big
  37:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openserial_getInputBuffer(&(input_buffer[0]),numDataBytes);
 130              		.loc 1 37 0
 131 0040 3A46     		mov	r2, r7
 132 0042 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 133 0046 1046     		mov	r0, r2
 134 0048 1946     		mov	r1, r3
 135 004a FFF7FEFF 		bl	openserial_getInputBuffer
  38:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  39:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    if (idmanager_getIsDAGroot()==TRUE && numDataBytes>0) {
 136              		.loc 1 39 0
 137 004e FFF7FEFF 		bl	idmanager_getIsDAGroot
 138 0052 0346     		mov	r3, r0
 139 0054 002B     		cmp	r3, #0
 140 0056 56D0     		beq	.L2
 141              		.loc 1 39 0 is_stmt 0 discriminator 1
 142 0058 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 143 005c 002B     		cmp	r3, #0
 144 005e 52D0     		beq	.L2
  40:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt = openqueue_getFreePacketBuffer(COMPONENT_OPENBRIDGE);
 145              		.loc 1 40 0 is_stmt 1
 146 0060 1020     		movs	r0, #16
 147 0062 FFF7FEFF 		bl	openqueue_getFreePacketBuffer
 148 0066 C7F88800 		str	r0, [r7, #136]
  41:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       if (pkt==NULL) {
 149              		.loc 1 41 0
 150 006a D7F88830 		ldr	r3, [r7, #136]
 151 006e 002B     		cmp	r3, #0
 152 0070 06D1     		bne	.L7
  42:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****          openserial_printError(COMPONENT_OPENBRIDGE,ERR_NO_FREE_PACKET_BUFFER,
 153              		.loc 1 42 0
 154 0072 1020     		movs	r0, #16
 155 0074 2C21     		movs	r1, #44
 156 0076 0022     		movs	r2, #0
 157 0078 0023     		movs	r3, #0
 158 007a FFF7FEFF 		bl	openserial_printError
  43:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                                (errorparameter_t)0,
  44:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                                (errorparameter_t)0);
  45:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****          return;
 159              		.loc 1 45 0
 160 007e 42E0     		b	.L2
 161              	.L7:
  46:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       }
  47:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //admin
  48:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt->creator  = COMPONENT_OPENBRIDGE;
 162              		.loc 1 48 0
 163 0080 D7F88830 		ldr	r3, [r7, #136]
 164 0084 1022     		movs	r2, #16
 165 0086 1A70     		strb	r2, [r3]
  49:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt->owner    = COMPONENT_OPENBRIDGE;
 166              		.loc 1 49 0
 167 0088 D7F88830 		ldr	r3, [r7, #136]
 168 008c 1022     		movs	r2, #16
 169 008e 5A70     		strb	r2, [r3, #1]
  50:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //l2
  51:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt->l2_nextORpreviousHop.type = ADDR_64B;
 170              		.loc 1 51 0
 171 0090 D7F88830 		ldr	r3, [r7, #136]
 172 0094 0222     		movs	r2, #2
 173 0096 83F83C20 		strb	r2, [r3, #60]
  52:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       memcpy(&(pkt->l2_nextORpreviousHop.addr_64b[0]),&(input_buffer[0]),8);
 174              		.loc 1 52 0
 175 009a D7F88830 		ldr	r3, [r7, #136]
 176 009e 03F13D02 		add	r2, r3, #61
 177 00a2 3B46     		mov	r3, r7
 178 00a4 1046     		mov	r0, r2
 179 00a6 1946     		mov	r1, r3
 180 00a8 0822     		movs	r2, #8
 181 00aa FFF7FEFF 		bl	memcpy
  53:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //payload
  54:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       packetfunctions_reserveHeaderSize(pkt,numDataBytes-8);
 182              		.loc 1 54 0
 183 00ae 97F88F30 		ldrb	r3, [r7, #143]
 184 00b2 083B     		subs	r3, r3, #8
 185 00b4 DBB2     		uxtb	r3, r3
 186 00b6 D7F88800 		ldr	r0, [r7, #136]
 187 00ba 1946     		mov	r1, r3
 188 00bc FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  55:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       memcpy(pkt->payload,&(input_buffer[8]),numDataBytes-8);
 189              		.loc 1 55 0
 190 00c0 D7F88830 		ldr	r3, [r7, #136]
 191 00c4 5A68     		ldr	r2, [r3, #4]
 192 00c6 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 193 00ca 083B     		subs	r3, r3, #8
 194 00cc 1C46     		mov	r4, r3
 195 00ce 3B46     		mov	r3, r7
 196 00d0 0833     		adds	r3, r3, #8
 197 00d2 1046     		mov	r0, r2
 198 00d4 1946     		mov	r1, r3
 199 00d6 2246     		mov	r2, r4
 200 00d8 FFF7FEFF 		bl	memcpy
  56:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       
  57:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //this is to catch the too short packet. remove it after fw-103 is solved.
  58:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       if (numDataBytes<16){
 201              		.loc 1 58 0
 202 00dc 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 203 00e0 0F2B     		cmp	r3, #15
 204 00e2 05D8     		bhi	.L8
  59:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****               openserial_printError(COMPONENT_OPENBRIDGE,ERR_INVALIDSERIALFRAME,
 205              		.loc 1 59 0
 206 00e4 1020     		movs	r0, #16
 207 00e6 3621     		movs	r1, #54
 208 00e8 0022     		movs	r2, #0
 209 00ea 0023     		movs	r3, #0
 210 00ec FFF7FEFF 		bl	openserial_printError
 211              	.L8:
  60:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0,
  61:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0);
  62:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       }        
  63:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //send
  64:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       if ((iphc_sendFromBridge(pkt))==E_FAIL) {
 212              		.loc 1 64 0
 213 00f0 D7F88800 		ldr	r0, [r7, #136]
 214 00f4 FFF7FEFF 		bl	iphc_sendFromBridge
 215 00f8 0346     		mov	r3, r0
 216 00fa 012B     		cmp	r3, #1
 217 00fc 03D1     		bne	.L2
  65:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****          openqueue_freePacketBuffer(pkt);
 218              		.loc 1 65 0
 219 00fe D7F88800 		ldr	r0, [r7, #136]
 220 0102 FFF7FEFF 		bl	openqueue_freePacketBuffer
 221              	.L2:
  66:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       }
  67:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    }
  68:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
 222              		.loc 1 68 0
 223 0106 9437     		adds	r7, r7, #148
 224              		.cfi_def_cfa_offset 12
 225 0108 BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 010a 90BD     		pop	{r4, r7, pc}
 229              		.cfi_endproc
 230              	.LFE1:
 232              		.align	2
 233              		.global	openbridge_sendDone
 234              		.thumb
 235              		.thumb_func
 237              	openbridge_sendDone:
 238              	.LFB2:
  69:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  70:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_sendDone(OpenQueueEntry_t* msg, owerror_t error) {
 239              		.loc 1 70 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 010c 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 010e 82B0     		sub	sp, sp, #8
 248              		.cfi_def_cfa_offset 16
 249 0110 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0112 7860     		str	r0, [r7, #4]
 252 0114 0B46     		mov	r3, r1
 253 0116 FB70     		strb	r3, [r7, #3]
  71:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    msg->owner = COMPONENT_OPENBRIDGE;
 254              		.loc 1 71 0
 255 0118 7B68     		ldr	r3, [r7, #4]
 256 011a 1022     		movs	r2, #16
 257 011c 5A70     		strb	r2, [r3, #1]
  72:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    if (msg->creator!=COMPONENT_OPENBRIDGE) {
 258              		.loc 1 72 0
 259 011e 7B68     		ldr	r3, [r7, #4]
 260 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261 0122 102B     		cmp	r3, #16
 262 0124 05D0     		beq	.L11
  73:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****       openserial_printError(COMPONENT_OPENBRIDGE,ERR_UNEXPECTED_SENDDONE,
 263              		.loc 1 73 0
 264 0126 1020     		movs	r0, #16
 265 0128 2B21     		movs	r1, #43
 266 012a 0022     		movs	r2, #0
 267 012c 0023     		movs	r3, #0
 268 012e FFF7FEFF 		bl	openserial_printError
 269              	.L11:
  74:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0,
  75:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0);
  76:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    }
  77:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openqueue_freePacketBuffer(msg);
 270              		.loc 1 77 0
 271 0132 7868     		ldr	r0, [r7, #4]
 272 0134 FFF7FEFF 		bl	openqueue_freePacketBuffer
  78:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
 273              		.loc 1 78 0
 274 0138 0837     		adds	r7, r7, #8
 275              		.cfi_def_cfa_offset 8
 276 013a BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 013c 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE2:
 283 013e 00BF     		.align	2
 284              		.global	openbridge_receive
 285              		.thumb
 286              		.thumb_func
 288              	openbridge_receive:
 289              	.LFB3:
  79:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  80:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** /**
  81:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** \brief Receive a frame at the openbridge, which sends it out over serial.
  82:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** */
  83:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_receive(OpenQueueEntry_t* msg) {
 290              		.loc 1 83 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 8
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0140 90B5     		push	{r4, r7, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0142 83B0     		sub	sp, sp, #12
 300              		.cfi_def_cfa_offset 24
 301 0144 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0146 7860     		str	r0, [r7, #4]
  84:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  85:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // prepend previous hop
  86:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    packetfunctions_reserveHeaderSize(msg,LENGTH_ADDR64b);
 304              		.loc 1 86 0
 305 0148 7868     		ldr	r0, [r7, #4]
 306 014a 0821     		movs	r1, #8
 307 014c FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  87:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    memcpy(msg->payload,msg->l2_nextORpreviousHop.addr_64b,LENGTH_ADDR64b);
 308              		.loc 1 87 0
 309 0150 7B68     		ldr	r3, [r7, #4]
 310 0152 5A68     		ldr	r2, [r3, #4]
 311 0154 7B68     		ldr	r3, [r7, #4]
 312 0156 3D33     		adds	r3, r3, #61
 313 0158 1046     		mov	r0, r2
 314 015a 1946     		mov	r1, r3
 315 015c 0822     		movs	r2, #8
 316 015e FFF7FEFF 		bl	memcpy
  88:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  89:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // prepend next hop (me)
  90:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    packetfunctions_reserveHeaderSize(msg,LENGTH_ADDR64b);
 317              		.loc 1 90 0
 318 0162 7868     		ldr	r0, [r7, #4]
 319 0164 0821     		movs	r1, #8
 320 0166 FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  91:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    memcpy(msg->payload,idmanager_getMyID(ADDR_64B)->addr_64b,LENGTH_ADDR64b);
 321              		.loc 1 91 0
 322 016a 7B68     		ldr	r3, [r7, #4]
 323 016c 5C68     		ldr	r4, [r3, #4]
 324 016e 0220     		movs	r0, #2
 325 0170 FFF7FEFF 		bl	idmanager_getMyID
 326 0174 0346     		mov	r3, r0
 327 0176 0133     		adds	r3, r3, #1
 328 0178 2046     		mov	r0, r4
 329 017a 1946     		mov	r1, r3
 330 017c 0822     		movs	r2, #8
 331 017e FFF7FEFF 		bl	memcpy
  92:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  93:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // send packet over serial (will be memcopied into serial buffer)
  94:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openserial_printData((uint8_t*)(msg->payload),msg->length);
 332              		.loc 1 94 0
 333 0182 7B68     		ldr	r3, [r7, #4]
 334 0184 5A68     		ldr	r2, [r3, #4]
 335 0186 7B68     		ldr	r3, [r7, #4]
 336 0188 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 337 018a 1046     		mov	r0, r2
 338 018c 1946     		mov	r1, r3
 339 018e FFF7FEFF 		bl	openserial_printData
  95:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  96:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // free packet
  97:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openqueue_freePacketBuffer(msg);
 340              		.loc 1 97 0
 341 0192 7868     		ldr	r0, [r7, #4]
 342 0194 FFF7FEFF 		bl	openqueue_freePacketBuffer
  98:build/openmote-cc2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
 343              		.loc 1 98 0
 344 0198 0C37     		adds	r7, r7, #12
 345              		.cfi_def_cfa_offset 12
 346 019a BD46     		mov	sp, r7
 347              		.cfi_def_cfa_register 13
 348              		@ sp needed
 349 019c 90BD     		pop	{r4, r7, pc}
 350              		.cfi_endproc
 351              	.LFE3:
 353              	.Letext0:
 354              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 355              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 356              		.file 4 "inc/opendefs.h"
 357              		.file 5 "bsp/boards/openmote-cc2538/board_info.h"
 358              		.file 6 "openstack/cross-layers/idmanager.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 openbridge.c
     /tmp/cc4c87KS.s:19     .rodata:0000000000000000 $d
     /tmp/cc4c87KS.s:22     .rodata:0000000000000000 rreg_uriquery
     /tmp/cc4c87KS.s:27     .rodata:0000000000000008 infoBoardname
     /tmp/cc4c87KS.s:32     .rodata:0000000000000010 infouCName
     /tmp/cc4c87KS.s:37     .rodata:0000000000000018 infoRadioName
     /tmp/cc4c87KS.s:42     .rodata:0000000000000024 infoStackName
     /tmp/cc4c87KS.s:47     .rodata:0000000000000030 linklocalprefix
     /tmp/cc4c87KS.s:57     .text:0000000000000000 $t
     /tmp/cc4c87KS.s:62     .text:0000000000000000 openbridge_init
     /tmp/cc4c87KS.s:91     .text:000000000000000c openbridge_triggerData
     /tmp/cc4c87KS.s:237    .text:000000000000010c openbridge_sendDone
     /tmp/cc4c87KS.s:288    .text:0000000000000140 openbridge_receive
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.c64f62fd52e22d94e2a6dd9c07eeb43e
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:0000000000000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:0000000000000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:0000000000000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:0000000000000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:0000000000000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:0000000000000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:0000000000000000 wm4.cdefs.h.47.e6563c1c3863188ba4ac4eaa2c85b6f1
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.board_info.h.22.b5c65365e76c8378df4f4b0ed59cbc39
                           .group:0000000000000000 wm4.opendefs.h.23.47191652995b7fa35f12da40c3552cda
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.24.b2be5f53932a9c9d07787288b29b6d75
                           .group:0000000000000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:0000000000000000 wm4.types.h.82.82b71f3f44c70e3a459d0f66642b05eb
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.68.a99a2db1e55915cfd1b035cc1e9fcff1
                           .group:0000000000000000 wm4.stdarg.h.31.48e922dd0aaedfb616aafd8a7b7a4949
                           .group:0000000000000000 wm4.openserial.h.32.c1b1c4db184af4a79a2b8ff62d908d4d
                           .group:0000000000000000 wm4.iphc.h.2.9e7d9d56ac728a3c0b3014283a59854e
                           .group:0000000000000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:0000000000000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69

UNDEFINED SYMBOLS
openserial_getInputBufferFilllevel
openserial_printError
openserial_getInputBuffer
idmanager_getIsDAGroot
openqueue_getFreePacketBuffer
memcpy
packetfunctions_reserveHeaderSize
iphc_sendFromBridge
openqueue_freePacketBuffer
idmanager_getMyID
openserial_printData
